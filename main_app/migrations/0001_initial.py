# Generated by Django 5.1.3 on 2025-06-28 13:41

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Blog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="عنوان مقاله")),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        default="مقاله ریاضی", null=True, verbose_name="توضیحات مقاله"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="photos",
                        verbose_name="عکس مقاله",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="تاریخ ایجاد"
                    ),
                ),
            ],
            options={
                "verbose_name": "مقاله",
                "verbose_name_plural": "مقالات",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Book",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="نام کتاب")),
                (
                    "description",
                    models.TextField(
                        max_length=500, null=True, verbose_name="توضیحات کتاب"
                    ),
                ),
            ],
            options={
                "verbose_name": "کتاب",
                "verbose_name_plural": "کتاب\u200cها",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="Grade",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30, verbose_name="پایه")),
            ],
            options={
                "verbose_name": "پایه",
                "verbose_name_plural": "پایه\u200cها",
                "ordering": ["id"],
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[("seller", "فروشنده"), ("customer", "خریدار")],
                        default="customer",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="عنوان فصل")),
                ("order", models.PositiveIntegerField(verbose_name="ترتیب فصل")),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chapters",
                        to="main_app.book",
                        verbose_name="کتاب",
                    ),
                ),
            ],
            options={
                "verbose_name": "فصل",
                "verbose_name_plural": "فصل\u200cها",
                "ordering": ["book"],
            },
        ),
        migrations.AddField(
            model_name="book",
            name="grade",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="main_app.grade",
                verbose_name="پایه",
            ),
        ),
        migrations.CreateModel(
            name="Lesson",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100, verbose_name="عنوان درس")),
                ("order", models.PositiveIntegerField(verbose_name="ترتیب درس")),
                (
                    "chapter",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.chapter",
                        verbose_name="فصل",
                    ),
                ),
            ],
            options={
                "verbose_name": "درس",
                "verbose_name_plural": "درس\u200cها",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150, verbose_name="عنوان محصول")),
                (
                    "teacher",
                    models.CharField(max_length=150, null=True, verbose_name="مدرس"),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=10,
                        null=True,
                        verbose_name="قیمت (تومان)",
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=0,
                        max_digits=10,
                        null=True,
                        verbose_name="قیمت  با تخفیف (تومان)",
                    ),
                ),
                (
                    "is_active",
                    models.CharField(
                        choices=[("active", "فعال"), ("inactive", "غیرفعال")],
                        default="active",
                        max_length=10,
                        verbose_name="وضعیت دوره",
                    ),
                ),
                (
                    "product_type",
                    models.CharField(
                        choices=[
                            ("full", "کل کتاب"),
                            ("part", "یک فصل کتاب"),
                            ("summary", "جمع بندی"),
                        ],
                        default="full",
                        max_length=10,
                        verbose_name="نوع محصول",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="توضیحات محصول"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="photos",
                        verbose_name="تصویر محصول",
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.book",
                        verbose_name="کتاب",
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.chapter",
                        verbose_name="فصل",
                    ),
                ),
            ],
            options={
                "verbose_name": "محصول",
                "verbose_name_plural": "محصولات",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="SampleQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150, verbose_name="عنوان سوال")),
                (
                    "file",
                    models.FileField(
                        upload_to="sample_questions",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["pdf"]
                            )
                        ],
                        verbose_name="فایل سوال",
                    ),
                ),
                (
                    "is_full_book",
                    models.BooleanField(
                        default=False, verbose_name="برای کل کتاب است؟"
                    ),
                ),
                (
                    "book",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.book",
                        verbose_name="کتاب",
                    ),
                ),
                (
                    "chapter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.chapter",
                        verbose_name="فصل",
                    ),
                ),
            ],
            options={
                "verbose_name": "نمونه سوال",
                "verbose_name_plural": "نمونه سوالات",
            },
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=150, verbose_name="عنوان ویدئو")),
                (
                    "video_file",
                    models.FileField(
                        blank=True,
                        upload_to="videos",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                allowed_extensions=["mp4", "mov", "avi"]
                            )
                        ],
                        verbose_name="فایل ویدئو",
                    ),
                ),
                (
                    "purchase_link",
                    models.URLField(
                        blank=True, null=True, verbose_name="لینک خرید (اسپات پلیر)"
                    ),
                ),
                (
                    "is_free",
                    models.BooleanField(default=False, verbose_name="رایگان است؟"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="توضیحات ویدئو"),
                ),
                (
                    "lesson",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.lesson",
                        verbose_name="درس مربوطه",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main_app.product",
                        verbose_name="محصول مرتبط",
                    ),
                ),
            ],
            options={
                "verbose_name": "ویدئو",
                "verbose_name_plural": "ویدئوها",
                "ordering": ["title"],
            },
        ),
    ]
